{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","padding","border","borderRadius","width","margin","minHeight","backgroundColor","fontSize","boxShadow","input","marginRight","height","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","TodoList","props","todos","map","onToggle","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab7f5f45.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../context\";\n\nconst styles = {\n  li: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \".5rem 1rem\",\n    border: \"1px solid #7e5563\",\n    borderRadius: \"4px\",\n    width: \"50%\",\n    margin: \"0 auto .5rem\",\n    minHeight: \"3rem\",\n    backgroundColor: \"#7e5563\",\n    fontSize: \"20px\",\n    boxShadow: \"0 0 10px rgba(0,0,0,0.5)\",\n  },\n  input: {\n    marginRight: \"1rem\",\n    width: \"18px\",\n    height: \"18px\",\n  },\n};\n\nfunction TodoItem({ todo, index, onChange }) {\n  const { removeTodo } = useContext(Context);\n  const classes = [];\n\n  if (todo.completed) {\n    classes.push(\"done\");\n  }\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(\"\")}>\n        <label className=\"checkbox-btn\">\n          <input\n            type=\"checkbox\"\n            checked={todo.completed}\n            style={styles.input}\n            onChange={() => onChange(todo.id)}\n          />\n        </label>\n        <strong>{index + 1}</strong>\n        &nbsp;\n        {todo.title}\n      </span>\n      <button className=\"rm\" onClick={removeTodo.bind(null, todo.id)}>\n        &times;\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\nconst styles = {\n  ul: {\n    listStyle: \"none\",\n    margin: 0,\n    padding: 0,\n  },\n};\n\nfunction TodoList(props) {\n  return (\n    <ul style={styles.ul}>\n      {props.todos.map((todo, index) => {\n        return (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            index={index}\n            onChange={props.onToggle}\n          />\n        );\n      })}\n    </ul>\n  );\n}\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from \"react\";\n\nexport default () => (\n  <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\n    <div className=\"lds-facebook\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport Loader from \"./Loader\";\n\nconst AddTodo = React.lazy(() => import(\"./Todo/AddTodo\"));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/?_limit=5\")\n      .then((response) => response.json())\n      .then((todos) => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false);\n        });\n      });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ])\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>To-do list</h1>\n        <React.Suspense fallback={<p>loading...</p>}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>To-do list is empty</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}